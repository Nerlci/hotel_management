// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id           String        @id @default(cuid())
  email        String        @unique
  username     String?
  type         Int           @default(0)
  password     String
  acRecords    ACRecord[]
  reservations Reservation[]
  diningRecords DiningRecord[]
}

model ACRecord {
  id        String   @id @default(cuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  roomId    String
  target    Float
  temp      Float
  fanSpeed  Int
  mode      Int
  on        Boolean
  priceRate Float
  type      Int
  timestamp DateTime @default(now())
}

model Room {
  id           String        @id @default(cuid())
  roomId       String        @unique
  status       String        @default("available")
  reservations Reservation[]
}

model Reservation {
  id            String   @id @default(cuid())
  room          Room?    @relation(fields: [roomId], references: [roomId])
  roomId        String?      
  user          User     @relation(fields: [userId], references: [id])
  userId        String   @unique
  startDate     DateTime
  endDate       DateTime
  checkInDate   DateTime?
  checkOutDate  DateTime?
}

model DiningRecord {
  id        String   @id @default(cuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  foodId    String
  quantity  Int
  timestamp DateTime @default(now())
}
